package ${packageName}.controller;

import java.util.List;
import javax.servlet.http.HttpServletResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
##import org.springframework.web.bind.annotation.PutMapping;
##import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
#if($openLombok)
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
#else
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
#end
#if($openBaseController)
import ${baseControllerWay}.${baseControllerName};
#end
#if($openUnifyAjaxResult)
import${unifyAjaxResultWay}.${unifyAjaxResultName};
#else
import com.wb.base.result.AjaxResult;
#end
import ${packageName}.domain.${ClassName};
import ${packageName}.service.I${ClassName}Service;
#if($table.crud || $table.sub)
import com.wb.base.result.TableDataInfo;
#elseif($table.tree)
#end

/**
 * ${functionName}Controller
 * 
 * @author ${author}
 * @date ${datetime}
 */
#if($openLombok)
@Slf4j
@RequiredArgsConstructor
#end
@RestController
@RequestMapping("/${moduleName}/${businessName}")
public class ${ClassName}Controller #if($openBaseController) extends ${baseControllerName} #end
{
    #if($openLombok)
    private final I${ClassName}Service ${className}Service;
    #else
    private static final Logger log = LoggerFactory.getLogger(${ClassName}Controller.class);

    @Autowired
    private I${ClassName}Service ${className}Service;
    #end


    /**
     * 查询${functionName}列表
     */
    @PostMapping("/list")
#if($table.crud || $table.sub)
    public #if($openUnifyAjaxResult) ${unifyAjaxResultName}  #else TableDataInfo #end list(@RequestBody ${ClassName} ${className})
    {
##        #if($openPageHelper)
##        startPage();
##        #end
        List<${ClassName}> list = ${className}Service.select${ClassName}List(${className});

    #if($openBaseController)
        #if($openUnifyAjaxResult)
        return success(list);
        #else
        return getDataTable(list);
        #end
    #else
        #if($openUnifyAjaxResult)
        return ${unifyAjaxResultName}.successResult(list);
        #else
        return list;
        #end
    #end
    }
#end


    /**
     * 获取${functionName}详细信息
     */
    @GetMapping(value = "/{${pkColumn.javaField}}")
    public #if($openUnifyAjaxResult) ${unifyAjaxResultName}  #else AjaxResult #end  getInfo(@PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField})
    {
        #if($openUnifyAjaxResult)
        return ${unifyAjaxResultName}.successResult(${className}Service.select${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaField}));
        #else
        return AjaxResult.success(${className}Service.select${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaField}));
        #end

    }

    /**
    * 新增修改
    */
##    @PostMapping("/saveOrUpdate")
##    public  #if($openUnifyAjaxResult) ${unifyAjaxResultName}  #else AjaxResult #end saveOrUpdate(@RequestBody ${ClassName} ${className}){
##        return  AjaxResult.success();
##    }
    /**
     * 新增${functionName}
     */
    @PostMapping("/add")
    public  #if($openUnifyAjaxResult) ${unifyAjaxResultName}  #else AjaxResult #end add(@RequestBody ${ClassName} ${className}) {
        #if($openUnifyAjaxResult)
        return ${unifyAjaxResultName}.successResult(${className}Service.insert${ClassName}(${className}));
        #else
        return AjaxResult.success(${className}Service.insert${ClassName}(${className}));
        #end
    }

    /**
     * 修改${functionName}
     */
    @PostMapping("/edit")
    public  #if($openUnifyAjaxResult) ${unifyAjaxResultName}  #else AjaxResult #end edit(@RequestBody ${ClassName} ${className})
    {
        #if($openUnifyAjaxResult)
            return ${unifyAjaxResultName}.successResult(${className}Service.update${ClassName}(${className}));
        #else
            return AjaxResult.success(${className}Service.update${ClassName}(${className}));
        #end
    }

    /**
     * 删除${functionName}
     */
    @GetMapping("/{${pkColumn.javaField}s}")
    public #if($openUnifyAjaxResult) ${unifyAjaxResultName}#else AjaxResult#end remove(@PathVariable ${pkColumn.javaType}[] ${pkColumn.javaField}s)
    {
        #if($openUnifyAjaxResult)
            return ${unifyAjaxResultName}.successResult(${className}Service.delete${ClassName}By${pkColumn.capJavaField}s(${pkColumn.javaField}s));
        #else
            return AjaxResult.success(${className}Service.delete${ClassName}By${pkColumn.capJavaField}s(${pkColumn.javaField}s));
        #end
    }
}
